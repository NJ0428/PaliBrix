#ifndef PALIBRIX_TETROMINODATA_H
#define PALIBRIX_TETROMINODATA_H

#include <vector>
#include "Game.h" // Include for the Mino struct definition

// Rotation states for each tetromino type
// Standard Tetris rotation data (SRS)
// Coordinates are relative to a pivot point in a 3x3 or 4x4 grid.
const std::vector<Mino> tetrominoShapes[7][4] = {
    // I (long bar)
    {
        {{0, 1}, {1, 1}, {2, 1}, {3, 1}}, // 0 deg (horizontal)
        {{2, 0}, {2, 1}, {2, 2}, {2, 3}}, // 90 deg (vertical)
        {{0, 2}, {1, 2}, {2, 2}, {3, 2}}, // 180 deg (horizontal)
        {{1, 0}, {1, 1}, {1, 2}, {1, 3}}  // 270 deg (vertical)
    },
    // O (square)
    {
        {{1, 1}, {2, 1}, {1, 2}, {2, 2}},
        {{1, 1}, {2, 1}, {1, 2}, {2, 2}},
        {{1, 1}, {2, 1}, {1, 2}, {2, 2}},
        {{1, 1}, {2, 1}, {1, 2}, {2, 2}}
    },
    // T
    {
        {{0, 1}, {1, 1}, {2, 1}, {1, 0}}, // 0
        {{1, 0}, {1, 1}, {1, 2}, {2, 1}}, // 90
        {{0, 1}, {1, 1}, {2, 1}, {1, 2}}, // 180
        {{1, 0}, {1, 1}, {1, 2}, {0, 1}}  // 270
    },
    // J
    {
        {{0, 0}, {0, 1}, {1, 1}, {2, 1}}, // 0
        {{1, 0}, {2, 0}, {1, 1}, {1, 2}}, // 90
        {{0, 1}, {1, 1}, {2, 1}, {2, 2}}, // 180
        {{1, 0}, {1, 1}, {0, 2}, {1, 2}}  // 270
    },
    // L
    {
        {{2, 0}, {0, 1}, {1, 1}, {2, 1}}, // 0
        {{1, 0}, {1, 1}, {1, 2}, {2, 2}}, // 90
        {{0, 1}, {1, 1}, {2, 1}, {0, 2}}, // 180
        {{0, 0}, {1, 0}, {1, 1}, {1, 2}}  // 270
    },
    // S
    {
        {{1, 0}, {2, 0}, {0, 1}, {1, 1}}, // 0
        {{1, 0}, {1, 1}, {2, 1}, {2, 2}}, // 90
        {{1, 1}, {2, 1}, {0, 2}, {1, 2}}, // 180
        {{0, 0}, {0, 1}, {1, 1}, {1, 2}}  // 270
    },
    // Z
    {
        {{0, 0}, {1, 0}, {1, 1}, {2, 1}}, // 0
        {{2, 0}, {1, 1}, {2, 1}, {1, 2}}, // 90
        {{0, 1}, {1, 1}, {1, 2}, {2, 2}}, // 180
        {{1, 0}, {0, 1}, {1, 1}, {0, 2}}  // 270
    }
};

#endif //PALIBRIX_TETROMINODATA_H 